---
import { getCollection } from 'astro:content';
import BaseLayout from './layouts/BaseLayout.astro';
import ProjectCard from '../components/ProjectCard.astro';
import clsx from 'clsx';
import { truncateText } from '@/utils/string.utils';

const allPieces = await getCollection('projects');
---

<BaseLayout pageTitle='tasmto - p o r t f o l i o'>
  <section
    class='grid md:grid-cols-3 md:grid-rows-[repeat(1,_97vh)] gap-4 md:gap-0 px-4 md:px-0 mt-14 md:mt-0'
  >
    {
      allPieces.slice(0, 3).map((piece, i) => (
        <a
          href={`/projects/${piece.slug}`}
          class={clsx([
            'h-full flex flex-col justify-between py-4 px-2 md:py-6 md:px-3 md:pt-12 min-h-64 md:min-h-max rounded-lg md:rounded-none',
            'relative',
            'bg-khaki-500 text-white',
            i === 0 && 'md:bg-black md:text-white',
            i === 1 && 'md:bg-khaki-700 md:text-black',
            i === 2 && 'md:bg-khaki-500 md:text-black',
          ])}
        >
          <div
            class={clsx([
              'absolute top-0 left-0 w-full h-full',
              'after:content-[""] after:absolute after:inset-0 after:bg-gradient-to-br after:from-khaki-400 after:to-khaki-950 after:z-[5] after:top-0 after:opacity-70 after:mix-blend-multiply after:rounded-lg rounded-lg md:rounded-none md:after:content-[none] after:pointer-events-none',
              i % 2 === 0 &&
                'after:bg-gradient-to-tl after:from-khaki-950 after:to-khaki-400',
            ])}
          >
            <img
              src={piece.data.coverImage.url}
              alt=''
              class={clsx([
                'w-full h-full object-cover',
                'opacity-80 rounded-lg md:rounded-none',
                i === 0 && 'md:opacity-10',
                i === 1 && 'md:opacity-90',
                i === 2 && 'md:opacity-5',
              ])}
              transition:name={`${piece.data.title.replaceAll(' ', '-')}-cover-image`}
            />
          </div>

          <p class='z-10 font-display tracking-widest uppercase text-sm'>
            {piece.data.subtitle}
          </p>
          <div class='z-10 space-y-2'>
            <h3
              class={clsx([
                'font-display text-2xl',
                i === 0 ? 'md:text-2xl' : 'md:text-3xl',
              ])}
              transition:name={piece.data.title.replaceAll(' ', '-')}
            >
              {piece.data.title}
            </h3>

            <p
              class={clsx([
                'text-xs font-light leading-relaxed tracking-wide sr-only',
                i === 1 ? 'md:sr-only' : ' md:not-sr-only',
              ])}
            >
              {truncateText(piece.data.description, 200)}
            </p>

            <div
              class={clsx(['flex gap-2 flex-wrap', i === 1 && 'md:sr-only'])}
            >
              {piece.data.tags.map((tag) => (
                <span class='text-xs bg-khaki-400 border border-khaki-950 text-black px-2 py-1 rounded-lg'>
                  {tag}
                </span>
              ))}
            </div>
          </div>
        </a>
      ))
    }
  </section>
  <h1 class='font-display text-3xl'>My Astro Site</h1>
  <h1>About Me</h1>
  <h2>... and my new Astro site!</h2>

  <div class='flex gap-x-2 gap-y-4'>
    {
      allPieces.map((piece) => (
        <ProjectCard
          title={piece.data.title}
          slug={`/projects/${piece.slug}`}
          category={piece.data.subtitle}
        />
      ))
    }
  </div>
</BaseLayout>
../../utils/string.utils
